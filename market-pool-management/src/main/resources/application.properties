server.port=8080
#spring.data.elasticsearch.cluster-nodes=http://10.10.20.16:9200/
spring.data.elasticsearch.cluster-name=marketpool
logging.level.org.springframework.data.elasticsearch.core=DEBUG

# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
#Dev Server
spring.datasource.url=jdbc:postgresql://10.10.21.174:5432/db_resource_pool_management
spring.datasource.username=ssouser
spring.datasource.password=ssodb4321

spring.banner.location=classpath:banner.txt



#Localhost
#spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
#spring.datasource.username=postgres
#spring.datasource.password=root

spring.datasource.driver-class-name=org.postgresql.Driver
# Keep the connection alive if idle for a long time (needed in production)
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query	
spring.jpa.show-sql=true
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=update
#spring.jpa.hibernate.ddl-auto=create

spring.main.allow-bean-definition-overriding=true

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

file.upload.location = C:\

#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type=TRACE

#Multipart file 

amazon-properties.endpoint-url = https://s3.ap-south-1.amazonaws.com
amazon-properties.access-key= AKIAVLDZTAKTOE5YQXNN
amazon-properties.secret-key= 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
amazon-properties.bucket-name= technoelevate-test
amazon-properties.region= ap-south-1

